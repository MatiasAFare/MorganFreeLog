<!DOCTYPE html>
<html>
  <head>
    <title>Mi Carrito de Compras</title>
    <link rel="stylesheet" href="/css/style.css" />
  </head>

  <body>
    <div class="container">
      <h1>Mi Carrito de Compras</h1>

      <% if (error) { %>
      <div class="alert alert-danger auto-hide"><%= error %></div>
      <% } %>

      <% if (typeof success !== 'undefined' && success) { %>
      <div class="alert alert-success auto-hide"><%= success %></div>
      <% } %>

      <div class="actions">
        <a href="/shop" class="btn btn-primary">Agregar Productos</a>
        <a href="/" class="btn btn-secondary">Volver al Inicio</a>
      </div>

      <% if (items && items.length > 0) { %>
      <table class="table">
        <thead>
          <tr>
            <th>ID</th>
            <th>Producto</th>
            <th>Precio Unitario</th>
            <th>Cantidad</th>
            <th>Subtotal</th>
            <th>Acciones</th>
          </tr>
        </thead>
        <tbody>
          <% let total = 0; %>
          <% items.forEach(item => { %>
          <% const subtotal = item.price * item.quantity; %>
          <% total += subtotal; %>
          <tr>
            <td><%= item.id %></td>
            <td><%= item.name %></td>
            <td>$<%= item.price.toFixed(2) %></td>
            <td><%= item.quantity %></td>
            <td>$<%= subtotal.toFixed(2) %></td>
            <td class="actions">
              <form
                action="/cart/<%= item.id %>/delete"
                method="POST"
                style="display: inline"
              >
                <button
                  type="submit"
                  class="btn btn-sm btn-danger"
                  onclick="return confirm('¿Está seguro que desea eliminar este producto del carrito?')"
                >
                  Eliminar
                </button>
              </form>
            </td>
          </tr>
          <% }); %>
        </tbody>
        <tfoot>
          <tr class="table-total">
            <td colspan="5"><strong>Total:</strong></td>
            <td><strong>$<%= total.toFixed(2) %></strong></td>
            <td></td>
          </tr>
        </tfoot>
      </table>

      <div class="cart-actions">
        <form action="/cart/clear" method="POST" style="display: inline">
          <button
            type="submit"
            class="btn btn-warning"
            onclick="return confirm('¿Está seguro que desea vaciar el carrito?')"
          >
            Vaciar Carrito
          </button>
        </form>
        <button type="button" class="btn btn-success" onclick="openPaymentModal()">
          Proceder al Pago
        </button>
      </div>

      <% } else { %>
      <div class="empty-cart">
        <p>Tu carrito está vacío.</p>
        <a href="/shop" class="btn btn-primary">Explorar Productos</a>
      </div>
      <% } %>
    </div>

    <!-- Modal de Pago -->
    <div id="paymentModal" class="modal" style="display: none;">
      <div class="modal-content">
        <div class="modal-header">
          <h2>Confirmar Compra</h2>
          <span class="close" onclick="closePaymentModal()">&times;</span>
        </div>
        <div class="modal-body">
          <div id="purchase-summary">
            <p>Cargando resumen de compra...</p>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" onclick="closePaymentModal()">
            Cancelar
          </button>
          <button type="button" class="btn btn-success" id="confirmPurchaseBtn" onclick="confirmPurchase()" disabled>
            Confirmar Compra
          </button>
        </div>
      </div>
    </div>

    <script>
      let currentPurchaseId = null;

      async function openPaymentModal() {
        const modal = document.getElementById('paymentModal');
        const summaryDiv = document.getElementById('purchase-summary');
        const confirmBtn = document.getElementById('confirmPurchaseBtn');
        
        try {
          modal.style.display = 'block';
          summaryDiv.innerHTML = '<p>Cargando resumen de compra...</p>';
          confirmBtn.disabled = true;

          const response = await fetch('/cart/api/total');
          const data = await response.json();

          if (response.ok) {
            currentPurchaseId = data.purchaseId;
            summaryDiv.innerHTML = `
              <div class="purchase-summary">
                <h3>Resumen de Compra</h3>
                <p><strong>ID de Compra:</strong> ${data.purchaseId}</p>
                <p><strong>Cliente:</strong> ${data.user.name}</p>
                <p><strong>Cantidad de Items:</strong> ${data.itemCount}</p>
                <div class="items-list">
                  <h4>Productos:</h4>
                  ${data.items.map(item => `
                    <div class="item-summary">
                      <span>${item.name} x${item.quantity}</span>
                      <span>$${(item.price * item.quantity).toFixed(2)}</span>
                    </div>
                  `).join('')}
                </div>
                <div class="total-summary">
                  <h3><strong>Total: $${data.total.toFixed(2)}</strong></h3>
                </div>
              </div>
            `;
            confirmBtn.disabled = false;
          } else {
            summaryDiv.innerHTML = `<p class="error-message">Error: ${data.message}</p>`;
          }
        } catch (error) {
          summaryDiv.innerHTML = `<p class="error-message">Error al cargar el resumen</p>`;
          console.error('Error:', error);
        }
      }

      async function confirmPurchase() {
        if (!currentPurchaseId) return;

        const confirmBtn = document.getElementById('confirmPurchaseBtn');
        const summaryDiv = document.getElementById('purchase-summary');
        
        try {
          confirmBtn.disabled = true;
          confirmBtn.textContent = 'Procesando...';

          const response = await fetch('/cart/api/purchase', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              purchaseId: currentPurchaseId
            })
          });

          const data = await response.json();

          if (response.ok) {
            summaryDiv.innerHTML = `
              <div class="success-message">
                <h3>¡Compra Exitosa!</h3>
                <p><strong>ID de Compra:</strong> ${data.purchase.id}</p>
                <p><strong>Total:</strong> $${data.purchase.total.toFixed(2)}</p>
                <p><strong>Estado:</strong> ${data.purchase.status}</p>
                <p>Gracias por su compra. Su carrito ha sido vaciado.</p>
              </div>
            `;
            
            // Recargar la página después de 2 segundos
            setTimeout(() => {
              window.location.reload();
            }, 2000);
          } else {
            summaryDiv.innerHTML = `<p class="error-message">Error: ${data.message}</p>`;
            confirmBtn.disabled = false;
            confirmBtn.textContent = 'Confirmar Compra';
          }
        } catch (error) {
          summaryDiv.innerHTML = `<p class="error-message">Error al procesar la compra</p>`;
          confirmBtn.disabled = false;
          confirmBtn.textContent = 'Confirmar Compra';
          console.error('Error:', error);
        }
      }

      function closePaymentModal() {
        const modal = document.getElementById('paymentModal');
        modal.style.display = 'none';
        currentPurchaseId = null;
      }

      // Cerrar modal al hacer clic fuera de él
      window.onclick = function(event) {
        const modal = document.getElementById('paymentModal');
        if (event.target === modal) {
          closePaymentModal();
        }
      }
    </script>

    <style>
      .modal {
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.7);
      }

      .modal-content {
        background-color: #2c3e50;
        color: #ecf0f1;
        margin: 10% auto;
        padding: 0;
        border: none;
        border-radius: 8px;
        width: 90%;
        max-width: 600px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.5);
      }

      .modal-header {
        padding: 20px;
        background-color: #34495e;
        border-bottom: 1px solid #4a5f7a;
        border-radius: 8px 8px 0 0;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .modal-header h2 {
        margin: 0;
        color: #ecf0f1;
        font-weight: 600;
      }

      .close {
        color: #bdc3c7;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
        transition: color 0.3s ease;
      }

      .close:hover {
        color: #e74c3c;
      }

      .modal-body {
        padding: 20px;
        max-height: 400px;
        overflow-y: auto;
        background-color: #2c3e50;
        color: #ecf0f1;
      }

      .modal-footer {
        padding: 20px;
        background-color: #34495e;
        border-top: 1px solid #4a5f7a;
        border-radius: 0 0 8px 8px;
        text-align: right;
      }

      .modal-footer .btn {
        margin-left: 10px;
      }

      .purchase-summary {
        text-align: left;
        color: #ecf0f1;
      }

      .purchase-summary h3 {
        color: #3498db;
        margin-bottom: 15px;
      }

      .purchase-summary p {
        color: #bdc3c7;
        margin: 8px 0;
      }

      .purchase-summary strong {
        color: #ecf0f1;
      }

      .items-list {
        margin: 15px 0;
        padding: 15px;
        background-color: #34495e;
        border-radius: 5px;
        border: 1px solid #4a5f7a;
      }

      .items-list h4 {
        color: #3498db;
        margin-bottom: 10px;
      }

      .item-summary {
        display: flex;
        justify-content: space-between;
        padding: 8px 0;
        border-bottom: 1px solid #4a5f7a;
        color: #ecf0f1;
      }

      .item-summary:last-child {
        border-bottom: none;
      }

      .total-summary {
        margin-top: 15px;
        padding: 15px;
        background-color: #27ae60;
        color: #ffffff;
        border-radius: 5px;
        text-align: center;
        border: 2px solid #2ecc71;
      }

      .total-summary h3 {
        color: #ffffff;
        margin: 0;
        font-size: 1.4em;
      }

      .success-message {
        text-align: center;
        padding: 20px;
        background-color: #27ae60;
        color: #ffffff;
        border-radius: 8px;
        margin: 10px 0;
      }

      .success-message h3 {
        color: #ffffff !important;
        margin-bottom: 15px;
      }

      .success-message p {
        color: #ffffff;
        margin: 8px 0;
      }

      .success-message strong {
        color: #ffffff;
      }

      .cart-actions {
        margin-top: 20px;
        text-align: center;
      }

      .cart-actions .btn {
        margin: 0 10px;
      }

      /* Mejorar contraste de texto de error */
      .modal-body p[style*="color: red"] {
        color: #e74c3c !important;
        background-color: #c0392b;
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #a93226;
      }

      .error-message {
        color: #ffffff !important;
        background-color: #e74c3c;
        padding: 12px;
        border-radius: 5px;
        border: 1px solid #c0392b;
        margin: 10px 0;
        font-weight: 500;
        text-align: center;
      }

      /* Mejorar el botón de confirmar compra */
      #confirmPurchaseBtn {
        background-color: #27ae60;
        border-color: #27ae60;
        color: #ffffff;
        font-weight: 600;
      }

      #confirmPurchaseBtn:hover:not(:disabled) {
        background-color: #229954;
        border-color: #229954;
      }

      #confirmPurchaseBtn:disabled {
        background-color: #7f8c8d;
        border-color: #7f8c8d;
        opacity: 0.6;
      }
    </style>
  </body>
</html>