<!DOCTYPE html>
<html>

<head>
    <title>Editar Item</title>
    <link rel="stylesheet" href="/css/style.css" />
</head>
<body>
    <div class="container">
        <h1>Editar Item</h1>

        <% if (error) { %>
        <div class="alert alert-danger"><%= error %></div>
        <% } %>

        <form action="/shop/<%= item.id %>/edit" method="POST">
            <div class="form-group">
                <label for="name">Nombre:</label>
                <input type="text" id="name" name="name" value="<%= item.name %>" required />
            </div>

            <div class="form-group">
                <label for="price">Precio:</label>
                <input type="number" id="price" name="price" value="<%= typeof item.price === 'number' ? item.price.toFixed(2) : item.price %>" step="0.01" required />
            </div>

            <div class="form-group">
                <label for="stock">Stock:</label>
                <input type="number" id="stock" name="stock" value="<%= item.stock %>" required />
            </div>

            <div class="form-group">
                <label for="category">Categor√≠a:</label>
                <select id="category-select">
                  <option value="">Seleccione una categor√≠a existente</option>
                  <% categories.forEach(cat => { %>
                  <option value="<%= cat %>" <%= item.category === cat ? 'selected' : '' %>><%= cat %></option>
                  <% }); %>
                </select>
                
                <div style="margin: 10px 0; text-align: center; color: #6c757d; font-weight: 500;">
                  ‚Äî O ‚Äî
                </div>
                
                <label for="new-category-input">Nueva categor√≠a:</label>
                <input type="text" id="new-category-input" placeholder="Escriba una nueva categor√≠a..." 
                       value="<%= categories.includes(item.category) ? '' : (item.category || '') %>"
                       style="padding: 8px; border: 1px solid #ced4da; border-radius: 4px; width: 100%;" />
                
                <!-- Campo hidden que se enviar√° al backend -->
                <input type="hidden" id="category" name="category" value="<%= item.category || '' %>" />
                
                <small style="color: #6c757d; font-size: 12px; display: block; margin-top: 5px;">
                  üí° Seleccione una categor√≠a existente O escriba una nueva (no ambas)
                </small>
            </div>
            <div class="form-actions">
                <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                <a href="/shop/<%= item.id %>" class="btn btn-secondary">Cancelar</a>
            </div>
        </form>
    </div>
    
    <script>
      // Manejo de categor√≠a mutuamente excluyente
      const categorySelect = document.getElementById('category-select');
      const newCategoryInput = document.getElementById('new-category-input');
      const hiddenCategoryField = document.getElementById('category');
      
      // Funci√≥n para establecer el estado inicial
      function setInitialState() {
        if (categorySelect.value) {
          // Si hay una categor√≠a seleccionada, deshabilitar el input
          newCategoryInput.style.opacity = '0.5';
          newCategoryInput.disabled = true;
          hiddenCategoryField.value = categorySelect.value;
        } else if (newCategoryInput.value.trim()) {
          // Si hay una nueva categor√≠a escrita, deshabilitar el select
          categorySelect.style.opacity = '0.5';
          categorySelect.disabled = true;
          hiddenCategoryField.value = newCategoryInput.value.trim();
        }
      }
      
      // Establecer estado inicial al cargar la p√°gina
      setInitialState();
      
      // Cuando se selecciona una categor√≠a existente
      categorySelect.addEventListener('change', function() {
        if (this.value) {
          newCategoryInput.value = '';
          newCategoryInput.style.opacity = '0.5';
          newCategoryInput.disabled = true;
          hiddenCategoryField.value = this.value;
        } else {
          newCategoryInput.style.opacity = '1';
          newCategoryInput.disabled = false;
          hiddenCategoryField.value = '';
        }
      });
      
      // Cuando se escribe una nueva categor√≠a
      newCategoryInput.addEventListener('input', function() {
        const newValue = this.value.trim();
        if (newValue) {
          categorySelect.value = '';
          categorySelect.style.opacity = '0.5';
          categorySelect.disabled = true;
          hiddenCategoryField.value = newValue;
        } else {
          categorySelect.style.opacity = '1';
          categorySelect.disabled = false;
          hiddenCategoryField.value = '';
        }
      });
      
      // Validaci√≥n antes del submit
      document.querySelector('form').addEventListener('submit', function(e) {
        const finalCategory = hiddenCategoryField.value;
        
        if (!finalCategory) {
          e.preventDefault();
          alert('Por favor seleccione una categor√≠a existente o escriba una nueva.');
          return false;
        }
        
        console.log('Enviando categor√≠a:', finalCategory); // Para debug
      });
    </script>
</body>
</html>